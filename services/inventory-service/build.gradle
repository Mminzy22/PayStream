plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'inventory-service'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    // spring boot starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // messageQueue & cache
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'org.springframework.session:spring-session-data-redis'

    // DB & JPA
    runtimeOnly 'org.postgresql:postgresql' // local, dev
    runtimeOnly 'com.h2database:h2' // test
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

    // 공통 라이브러리 가져옴
//    implementation project(':common:core')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}